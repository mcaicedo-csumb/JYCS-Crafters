package com.stanissudo.jycs_crafters;

import static org.junit.Assert.*;

import android.content.Context;

import androidx.room.Room;
import androidx.test.core.app.ApplicationProvider;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import com.stanissudo.jycs_crafters.database.FuelTrackAppDatabase;
import com.stanissudo.jycs_crafters.database.UserDAO;
import com.stanissudo.jycs_crafters.database.entities.User;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(AndroidJUnit4.class)
public class UserDaoAdminTest {

    private FuelTrackAppDatabase db;
    private UserDAO userDAO;

    @Before
    public void setup() {
        Context ctx = ApplicationProvider.getApplicationContext();
        db = Room.inMemoryDatabaseBuilder(ctx, FuelTrackAppDatabase.class)
                .allowMainThreadQueries() // tests only
                .build();
        userDAO = db.userDAO();
    }

    @After
    public void tearDown() { db.close(); }

    @Test
    public void admin_can_deactivate_and_reactivate_user() {
        // Arrange: insert user
        User u = new User("camila_test", "pw", false);
        u.setActive(true);
        userDAO.insert(u);

        // Fetch to get autogenerated id
        User inserted = userDAO.loginNow("camila_test", "pw");
        assertNotNull(inserted);

        // Act: deactivate
        userDAO.setUserActive(inserted.getId(), false);
        User afterDeactivate = userDAO.loginNow("camila_test", "pw");
        assertNotNull(afterDeactivate);
        assertFalse(afterDeactivate.isActive());

        // Act: reactivate
        userDAO.setUserActive(inserted.getId(), true);
        User afterReactivate = userDAO.loginNow("camila_test", "pw");
        assertNotNull(afterReactivate);
        assertTrue(afterReactivate.isActive());
    }
}
